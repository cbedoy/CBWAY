/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cb.cmap.viewcontrollers;

import cb.cmap.bussinescontrollers.MasterViewController;
import cb.cmap.interfaces.IGravityServiceDelegate;
import cb.cmap.interfaces.INodeHandlerDelagate;
import cb.cmap.interfaces.INodeRepresentationDelegate;
import java.util.HashMap;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos
 */
public class MainView extends javax.swing.JFrame implements INodeRepresentationDelegate{
    private final DefaultTableModel defaultTableModel;
    private MasterViewController    masterViewController;
    private INodeHandlerDelagate    nodeHandlerDelegate;
    
    public MainView() {
        initComponents();
        setVisible(true);
        setResizable(false);
        defaultTableModel = new DefaultTableModel();
        defaultTableModel.setColumnIdentifiers(new Object[]{"Name", "Latitud", "Longitud", "Cost"});
        dataCenter.setModel(defaultTableModel);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataCenter = new javax.swing.JTable();
        sName = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        actionSolve = new javax.swing.JButton();
        sPositionX = new javax.swing.JLabel();
        sPositionY = new javax.swing.JLabel();
        sCost = new javax.swing.JTextField();
        sCountry = new javax.swing.JLabel();
        sState = new javax.swing.JLabel();
        sCity = new javax.swing.JLabel();
        sDelegation = new javax.swing.JLabel();
        sAbbrevation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dataCenter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(dataCenter);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        actionSolve.setText("Solve");
        actionSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionSolveActionPerformed(evt);
            }
        });

        sPositionX.setText("POINT X");

        sPositionY.setText("POINT Y");

        sCountry.setText("COUNTRY");

        sState.setText("STATE");

        sCity.setText("CITY");

        sDelegation.setText("DELEGATION");

        sAbbrevation.setText("ABBREVIATURE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sName)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(sCost, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(actionSolve)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sCountry)
                                .addComponent(sPositionY)
                                .addComponent(sState)
                                .addComponent(sCity)
                                .addComponent(sDelegation)
                                .addComponent(sAbbrevation)
                                .addComponent(sPositionX)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(sName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(sCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addComponent(actionSolve)
                .addGap(51, 51, 51)
                .addComponent(sPositionX)
                .addGap(18, 18, 18)
                .addComponent(sPositionY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sCountry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sState)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sDelegation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sAbbrevation)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed

        String country                                  = sName.getText();
        Double cost                                     = Double.parseDouble(sCost.getText());
        masterViewController.getMasterController().userSelectedCountryWithCost(country, cost);
        sName.setText(null);
        sCost.setText(null);
    }//GEN-LAST:event_addButtonActionPerformed

    private void actionSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionSolveActionPerformed
        IGravityServiceDelegate gravityServiceDelegate  = masterViewController.getGravityServiceDelegate();
        List<Object> dataModel                          = masterViewController.getMasterController().getDataModel();
        gravityServiceDelegate.solveNodes(dataModel);
        masterViewController.userRequestSolution();
    }//GEN-LAST:event_actionSolveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionSolve;
    private javax.swing.JButton addButton;
    private javax.swing.JTable dataCenter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel sAbbrevation;
    private javax.swing.JLabel sCity;
    private javax.swing.JTextField sCost;
    private javax.swing.JLabel sCountry;
    private javax.swing.JLabel sDelegation;
    private javax.swing.JTextField sName;
    private javax.swing.JLabel sPositionX;
    private javax.swing.JLabel sPositionY;
    private javax.swing.JLabel sState;
    // End of variables declaration//GEN-END:variables

    public void setMasterViewController(MasterViewController masterViewController) {
        this.masterViewController = masterViewController;
    }

    
    @Override
    public void reloadData(HashMap<String, Object> dataModel) {
        
        sCountry    .setText(dataModel.get("country").toString());
        sCity       .setText(dataModel.get("city").toString());
        sAbbrevation.setText(dataModel.get("abbrevation").toString());
        sState      .setText(dataModel.get("state").toString());
        sPositionX  .setText(dataModel.get("position_x").toString());
        sPositionY  .setText(dataModel.get("position_y").toString());
    }

    @Override
    public void reloadTable(HashMap<String, Object> dataModel) {
        
    }

    public INodeHandlerDelagate getNodeHandlerDelegate() {
        return nodeHandlerDelegate;
    }

    public void setNodeHandlerDelegate(INodeHandlerDelagate nodeHandlerDelegate) {
        this.nodeHandlerDelegate = nodeHandlerDelegate;
    }
}
